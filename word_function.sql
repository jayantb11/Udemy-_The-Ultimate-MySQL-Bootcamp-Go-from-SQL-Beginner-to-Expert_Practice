-- create database work_function;
-- CREATE TABLE employees (
--     emp_no INT PRIMARY KEY AUTO_INCREMENT,
--     department VARCHAR(20),
--     salary INT
-- );
--  
-- INSERT INTO employees (department, salary) VALUES
-- ('engineering', 80000),
-- ('engineering', 69000),
-- ('engineering', 70000),
-- ('engineering', 103000),
-- ('engineering', 67000),
-- ('engineering', 89000),
-- ('engineering', 91000),
-- ('sales', 59000),
-- ('sales', 70000),
-- ('sales', 159000),
-- ('sales', 72000),
-- ('sales', 60000),
-- ('sales', 61000),
-- ('sales', 61000),
-- ('customer service', 38000),
-- ('customer service', 45000),
-- ('customer service', 61000),
-- ('customer service', 40000),
-- ('customer service', 31000),
-- ('customer service', 56000),
-- ('customer service', 55000);


-- use work_function;
-- select department,AVG(salary) from employees group by 1
-- select emp_no,department,salary,AVG(salary) OVER(),MIN(salary) OVER(),MAX(salary)  OVER()  from employees 
-- select emp_no,department,salary,AVG(salary) OVER(partition by department) as dep_avg from employees 
-- select emp_no,department,salary,COUNT(*) over(partition by department) as dept_count from employees
-- select emp_no,department,salary,sum(salary) over() as total_salary,sum(salary) OVER(partition by department) as dep_salary 
-- from employees
-- select emp_no,department,salary,sum(salary) over(partition by department order by salary) from employees
-- select emp_no,department,salary,MIN(salary) over(partition by department order by salary DESC) from employees
-- select emp_no,department,salary,RANK() OVER(partition by department order by salary desc) as overall_salary_rank from employees
-- select emp_no,department,salary,row_number() OVER(partition by department order by salary desc) as overall_salary_rank from employees
-- select emp_no,department,salary,dense_rank() OVER(partition by department order by salary desc) as dense_salary from employees
-- use work_function;
-- select emp_no,department,salary,NTILE(4) OVER(ORDER BY salary desc) as salary_quartile,
-- NTILE(4) OVER(partition by department order BY salary desc) as dept_salary_quartile from employees
-- select emp_no,department,salary,first_value(emp_no)  OVER(partition by department ORDER BY salary desc) from employees
select emp_no,department,salary,salary - LAG(salary) over ( partition by department order by salary desc) from employees